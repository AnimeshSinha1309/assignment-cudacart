#pragma once

#include <stdexcept>
#include <vector>
#include <array>

#include <npp.h>


namespace CudaProj::Cartpole
{

class CudaImage;
class CpuImage;


class CudaImage
{
    Npp8u* mImage = nullptr;
    int mRows = 0;
    int mCols = 0;
    int mPitch = 0;

public:
    CudaImage(int width, int height);
    CudaImage(CpuImage image);
    ~CudaImage();

    Npp8u* image_ptr();
    std::pair<int, int> image_size();

    friend class CpuImage;
};


class CpuImage
{
    Npp8u* mImage = nullptr;
    int mRows = 0;
    int mCols = 0;
    int mPitch = 0;

public:
    CpuImage(int rows, int cols);
    CpuImage(std::vector<std::vector<std::array<Npp8u, 3>>> image);
    CpuImage(CudaImage image);
    ~CpuImage();

    std::vector<std::vector<std::array<Npp8u, 3>>> to_matrix();

    friend class CudaImage;
};

}
